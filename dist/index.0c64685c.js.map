{"mappings":"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","sources":["./public/components/navigation.js","./public/script.js"],"sourcesContent":["class Navigation {\n    constructor(links, pages) {\n        this.links = links;\n        this.pages = pages;\n        this.currentPage = null;\n    }\n\n    getLinks() {\n        console.log(this.links)\n    }\n\n    setPage(pageId) {\n        this.currentPage = pageId;\n        console.log(this.currentPage);\n\n        this.links.forEach((link) => {\n            link.classList.remove('active');\n            if (this.getHash(link) === pageId) {\n                link.classList.add('active');\n            }\n        })\n\n        // individual page\n        this.pages.forEach((page) => {\n            page.style.display = 'none';\n        })\n\n        // display for page to be visible\n        document.getElementById(pageId).style.display = \"block\";\n    }\n\n    getHash(link) {\n        return link.href.split(\"#\")[1];\n    }\n}\n\nexport default Navigation;","// NAVIGATION start\nimport Navigation from './components/navigation';\n\nconst links = document.querySelectorAll('.vertical > ul > li > a');\nconst pages = document.querySelectorAll('.page-container');\n\nvar nav = new Navigation(links, pages);\nnav.getLinks();\n\n// for each loop\nnav.links.forEach(function(link) {\n    link.addEventListener('click', function() {\n        let pageId = (nav.getHash(link));\n        nav.setPage(pageId);\n    })\n})\n\nconst subLinks = document.querySelectorAll('.sub-nav > ul > li > a');\nconst subPages = document.querySelectorAll('.sub-page-container');\n\n// subNav \nvar subNav = new Navigation(subLinks, subPages);\n// event listeners for subNav\nsubNav.links.forEach((link) => {\n    link.addEventListener('click', function() {\n        let pageId = subNav.getHash(link);\n        subNav.setPage(pageId);\n    })\n})\n// NAVIGATION END\n\n\n// TASK LIST start\n//use const as the form will never change. Var also works\nconst form = document.getElementById(\"taskform\");\nconst button = document.querySelector(\"#taskform > button\")\n//const button = document.querySelector(\"form > button\")\nvar taskInput = document.getElementById(\"taskInput\");\nvar tasklist = document.getElementById(\"tasklist\");\nvar dueDateInput = document.getElementById(\"dueDateInput\");\nvar completionTimeInput = document.getElementById(\"completionTimeInput\");\nvar estimatedTimeInput = document.getElementById(\"estimatedTimeInput\");\nvar priorityInput = document.getElementById(\"priorityInput\");\n\n//eventListener for button\nform.addEventListener(\"submit\", function(event){\n  event.preventDefault();\n  let task = taskInput.value;\n  let dueDate = dueDateInput.value;\n  let completionTime = completionTimeInput.value;\n  let estimatedTime = estimatedTimeInput.value;\n  let priorityRating = priorityInput.options[priorityInput.selectedIndex].value;\n  addTask(task, dueDate, estimatedTime, priorityRating, completionTime, false);\n  console.log(taskList);\n})\n\n\nvar taskListArray = [];\n\nfunction addTask(taskDescription, dueDate, estimatedTime, priorityRating, completionTime, completionStatus) {\n  let d = new Date();\n  let dateCreated = d.getFullYear();\n  //task components\n  let task = {\n    taskDescription,\n    dueDate,\n    dateCreated,\n    estimatedTime,\n    completionTime,\n    priorityRating,\n    completionStatus\n  };\n  taskListArray.push(task);\n  renderTask(task);\n}\n\n// add rest of info to display for bulletpoint\nfunction renderTask(task) {\n  // Create HTML elements\n  let item = document.createElement(\"li\");\n  item.innerHTML = \"<p>\" + task.taskDescription + \"</p>\";\n\n  tasklist.appendChild(item);\n\n  // Extra Task DOM elements\n  let delButton = document.createElement(\"button\");\n  let delButtonText= document.createTextNode(\"Delete Task\");\n  delButton.appendChild(delButtonText);\n  item.appendChild(delButton);\n\n  // Event Listeners for DOM elements\n  delButton.addEventListener(\"click\", function(event) {\n    event.preventDefault();\n    item.remove();\n  })\n\n  // Clear the input form \n  form.reset();\n}\n\n// TASK LIST end\n\n\n// TIMER start\nfunction timeToString(time) {\n  let diffInHrs = time / 3600000;\n  let hh = Math.floor(diffInHrs);\n\n  let diffInMin = (diffInHrs - hh) * 60;\n  let mm = Math.floor(diffInMin);\n\n  let diffInSec = (diffInMin - mm) * 60;\n  let ss = Math.floor(diffInSec);\n\n  let formattedHH = hh.toString().padStart(2, \"0\");\n  let formattedMM = mm.toString().padStart(2, \"0\");\n  let formattedSS = ss.toString().padStart(2, \"0\");\n\n  return `${formattedHH}:${formattedMM}:${formattedSS}`;\n}\n\n\nlet playButton = document.getElementById(\"playButton\");\nlet pauseButton = document.getElementById(\"pauseButton\");\nlet resetButton = document.getElementById(\"resetButton\");\n\nplayButton.addEventListener(\"click\", start);\npauseButton.addEventListener(\"click\", pause);\nresetButton.addEventListener(\"click\", reset);\n\nlet startTime;\nlet elapsedTime = 0;\n\n\nfunction start() {\n  startTime = Date.now();\n  setInterval(function printTime() {\n    elapsedTime = Date.now() - startTime;\n    document.getElementById(\"display\").innerHTML = timeToString(elapsedTime);\n  }, 1000);\n}\n\nfunction start() {\n  startTime = Date.now() - elapsedTime;\n  timerInterval = setInterval(function printTime() {\n    elapsedTime = Date.now() - startTime;\n    print(timeToString(elapsedTime));\n  }, 10);\n  showButton(\"PAUSE\");\n}\n\nfunction pause() {\n  clearInterval(timerInterval);\n  showButton(\"PLAY\");\n}\n\nfunction reset() {\n  clearInterval(timerInterval);\n  print(\"00:00:00\");\n  elapsedTime = 0;\n  showButton(\"PLAY\");\n}\n\nfunction showButton(buttonKey) {\n  const buttonToShow = buttonKey === \"PLAY\" ? playButton: pauseButton;\n  const buttonToHide = buttonKey === \"PLAY\" ? pauseButton: playButton;\n  buttonToShow.style.display = \"block\";\n  buttonToHide.style.display = \"none\";\n}\n// Create event listeners\n\n// TIMER end"],"names":["$a800c35920c7f688f9a6a8903974e2f9$export$default","constructor","links","pages","this","currentPage","getLinks","console","log","setPage","pageId","forEach","link","classList","remove","getHash","add","page","style","display","document","getElementById","href","split","$aba770e9ce7dbb561d9a46041b248abf$var$nav","querySelectorAll","addEventListener","$aba770e9ce7dbb561d9a46041b248abf$var$subNav","$aba770e9ce7dbb561d9a46041b248abf$var$form","querySelector","$aba770e9ce7dbb561d9a46041b248abf$var$taskInput","$aba770e9ce7dbb561d9a46041b248abf$var$tasklist","$aba770e9ce7dbb561d9a46041b248abf$var$dueDateInput","$aba770e9ce7dbb561d9a46041b248abf$var$completionTimeInput","$aba770e9ce7dbb561d9a46041b248abf$var$estimatedTimeInput","$aba770e9ce7dbb561d9a46041b248abf$var$priorityInput","event","preventDefault","task","value","dueDate","completionTime","taskDescription","estimatedTime","priorityRating","completionStatus","dateCreated","d","Date","getFullYear","$aba770e9ce7dbb561d9a46041b248abf$var$taskListArray","push","item","createElement","innerHTML","appendChild","delButton","delButtonText","createTextNode","reset","$aba770e9ce7dbb561d9a46041b248abf$var$renderTask","$aba770e9ce7dbb561d9a46041b248abf$var$addTask","options","selectedIndex","taskList","$aba770e9ce7dbb561d9a46041b248abf$var$timeToString","time","diffInHrs","hh","Math","floor","diffInMin","mm","diffInSec","ss","toString","padStart","$aba770e9ce7dbb561d9a46041b248abf$var$startTime","$aba770e9ce7dbb561d9a46041b248abf$var$playButton","$aba770e9ce7dbb561d9a46041b248abf$var$pauseButton","$aba770e9ce7dbb561d9a46041b248abf$var$resetButton","now","$aba770e9ce7dbb561d9a46041b248abf$var$elapsedTime","timerInterval","setInterval","print","$aba770e9ce7dbb561d9a46041b248abf$var$showButton","clearInterval","buttonKey","buttonToHide"],"version":3,"file":"index.0c64685c.js.map"}