{"mappings":"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","sources":["public/components/navigation.js","public/script.js"],"sourcesContent":["class Navigation {\n    constructor(links, pages) {\n        this.links = links;\n        this.pages = pages;\n        this.currentPage = null;\n    }\n\n    getLinks() {\n        console.log(this.links)\n    }\n\n    setPage(pageId) {\n        this.currentPage = pageId;\n        console.log(this.currentPage);\n\n        this.links.forEach((link) => {\n            link.classList.remove('active');\n            if (this.getHash(link) === pageId) {\n                link.classList.add('active');\n            }\n        })\n\n        // individual page\n        this.pages.forEach((page) => {\n            page.style.display = 'none';\n        })\n\n        // display for page to be visible\n        document.getElementById(pageId).style.display = \"block\";\n    }\n\n    getHash(link) {\n        return link.href.split(\"#\")[1];\n    }\n}\n\nexport default Navigation;","// NAVIGATION start\nimport Navigation from './components/navigation';\n\nconst links = document.querySelectorAll('.vertical > ul > li > a');\nconst pages = document.querySelectorAll('.page-container');\n\nvar nav = new Navigation(links, pages);\nnav.getLinks();\n\n// for each loop\nnav.links.forEach(function(link) {\n    link.addEventListener('click', function() {\n        let pageId = (nav.getHash(link));\n        nav.setPage(pageId);\n    })\n})\n\nconst subLinks = document.querySelectorAll('.sub-nav > ul > li > a');\nconst subPages = document.querySelectorAll('.sub-page-container');\n\n// subNav \nvar subNav = new Navigation(subLinks, subPages);\n// event listeners for subNav\nsubNav.links.forEach((link) => {\n    link.addEventListener('click', function() {\n        let pageId = subNav.getHash(link);\n        subNav.setPage(pageId);\n    })\n})\n// NAVIGATION END\n\n\n// TASK LIST start\n\n// use const as the form will never change. Var also works\nconst form = document.getElementById(\"taskform\");\nconst button = document.querySelector(\"#taskform > button\")\n// const button = document.querySelector(\"form > button\")\nvar taskInput = document.getElementById(\"taskInput\");\nvar tasklist = document.getElementById(\"tasklist\");\nvar dueDateInput = document.getElementById(\"dueDateInput\");\nvar completionTimeInput = document.getElementById(\"completionTimeInput\");\nvar estimatedTimeInput = document.getElementById(\"estimatedTimeInput\");\nvar priorityInput = document.getElementById(\"priorityInput\");\n\n//eventListener for button\nform.addEventListener(\"submit\", function(event){\n  event.preventDefault();\n  let task = taskInput.value;\n  let dueDate = dueDateInput.value;\n  let completionTime = completionTimeInput.value;\n  let estimatedTime = estimatedTimeInput.value;\n  let priorityRating = priorityInput.options[priorityInput.selectedIndex].value;\n  addTask(task, dueDate, estimatedTime, priorityRating, completionTime, false);\n  console.log(taskList);\n})\n\n\nvar taskListArray = [];\n\nfunction addTask(taskDescription, dueDate, estimatedTime, priorityRating, completionTime, completionStatus) {\n  let d = new Date();\n  let dateCreated = d.getFullYear();\n  //task components\n  let task = {\n    taskDescription,\n    dueDate,\n    dateCreated,\n    estimatedTime,\n    completionTime,\n    priorityRating,\n    completionStatus\n  };\n  taskListArray.push(task);\n  renderTask(task);\n}\n\n// add rest of info to display for bulletpoint\nfunction renderTask(task) {\n  // Create HTML elements\n  let item = document.createElement(\"li\");\n  item.innerHTML = \"<p>\" + task.taskDescription + \"</p>\";\n\n  tasklist.appendChild(item);\n\n  // Extra Task DOM elements\n  let delButton = document.createElement(\"button\");\n  let delButtonText= document.createTextNode(\"Delete Task\");\n  delButton.appendChild(delButtonText);\n  item.appendChild(delButton);\n\n  // Event Listeners for DOM elements\n  delButton.addEventListener(\"click\", function(event) {\n    event.preventDefault();\n    item.remove();\n  })\n\n  // Clear the input form \n  form.reset();\n}\n\n// TASK LIST end\n\n\n// TIMER start\n\n// Convert time to a format of hours, minutes, seconds, and milliseconds\nfunction timeToString(time) {\n  let diffInHrs = time / 3600000;\n  let hh = Math.floor(diffInHrs);\n\n  let diffInMin = (diffInHrs - hh) * 60;\n  let mm = Math.floor(diffInMin);\n\n  let diffInSec = (diffInMin - mm) * 60;\n  let ss = Math.floor(diffInSec);\n\n  let diffInMs = (diffInSec - ss) * 100;\n  let ms = Math.floor(diffInMs);\n\n  let formattedHH = hh.toString().padStart(2, \"0\");\n  let formattedMM = mm.toString().padStart(2, \"0\");\n  let formattedSS = ss.toString().padStart(2, \"0\");\n  let formattedMS = ms.toString().padStart(2, \"0\");\n  \n\n  return `${formattedHH}:${formattedMM}:${formattedSS}:${formattedMS}`;\n}\n\n// Declare variables to use in our functions below\nlet startTime;\nlet elapsedTime = 0;\nlet timerInterval;\n\n// Create function to modify innerHTML\nfunction print(txt) {\n  document.getElementById(\"display\").innerHTML = txt;\n}\n\n// Create \"start\", \"pause\" and \"reset\" functions\nfunction start() {\n  startTime = Date.now() - elapsedTime;\n  timerInterval = setInterval(function printTime() {\n    elapsedTime = Date.now() - startTime;\n    print(timeToString(elapsedTime));\n  }, 10);\n  showButton(\"PAUSE\");\n}\n\nfunction pause() {\n  clearInterval(timerInterval);\n  showButton(\"PLAY\");\n}\n\nfunction reset() {\n  clearInterval(timerInterval);\n  print(\"00:00:00:00\");\n  elapsedTime = 0;\n  showButton(\"PLAY\");\n}\n\n// Create function to display buttons\nfunction showButton(buttonKey) {\n  const buttonToShow = buttonKey === \"PLAY\" ? playButton : pauseButton;\n  const buttonToHide = buttonKey === \"PLAY\" ? pauseButton : playButton;\n  buttonToShow.style.display = \"block\";\n  buttonToHide.style.display = \"none\";\n}\n// Create event listeners\nlet playButton = document.getElementById(\"playButton\");\nlet pauseButton = document.getElementById(\"pauseButton\");\nlet resetButton = document.getElementById(\"resetButton\");\n\nplayButton.addEventListener(\"click\", start);\npauseButton.addEventListener(\"click\", pause);\nresetButton.addEventListener(\"click\", reset);\n\n// TIMER end\n\n\n\n// POMODORO start\n// https://inspiredwebdev.com/create-pomodoro-clock/\n\nconst pomodoroTimer = document.querySelector('#pomodoro-timer')\nconst pomStart = document.querySelector('#pomodoro-start')\nconst pomStop = document.querySelector('#pomodoro-stop')\n\nlet type = 'Work'\nlet timeSpentInCurrentSession = 0\nlet isClockStopped = true\n\nlet updatedWorkSessionDuration\nlet updatedBreakSessionDuration\n\nlet workDurationInput = document.querySelector('#input-work-duration')\nlet breakDurationInput = document.querySelector('#input-break-duration')\n\nworkDurationInput.value = '25'\nbreakDurationInput.value = '5'\n\n\nconst showStopIcon = () => {\n  const stopButton = document.querySelector('#pomodoro-stop')\n  stopButton.classList.remove('hidden')\n}\n\nconst togglePlayPauseIcon = (reset) => {\n  const playIcon = document.querySelector('#play-icon')\n  const pauseIcon = document.querySelector('#pause-icon')\n  if (reset) {\n    // when resetting -> always revert to play icon\n    if (playIcon.classList.contains('hidden')) {\n      playIcon.classList.remove('hidden')\n    }\n    if (!pauseIcon.classList.contains('hidden')) {\n      pauseIcon.classList.add('hidden')\n    }\n  } else {\n    playIcon.classList.toggle('hidden')\n    pauseIcon.classList.toggle('hidden')\n  }\n}\n\n// Start button\npomStart.addEventListener('click', () => {\n  toggleClock()\n})\n// Stop button\npomStop.addEventListener('click', () => {\n  toggleClock(true)\n})\n\n\n// UPDATE WORK TIME\nworkDurationInput.addEventListener('input', () => {\n  updatedWorkSessionDuration = minuteToSeconds(workDurationInput.value)\n})\n// UPDATE PAUSE TIME\nbreakDurationInput.addEventListener('input', () => {\n  updatedBreakSessionDuration = minuteToSeconds(breakDurationInput.value)\n})\nconst minuteToSeconds = (mins) => {\n  return mins * 60\n}\n\nlet isClockRunning = false\n\n// Work and break durations\nlet workSessionDuration = 1500\nlet currentTimeLeftInSession = 1500\nlet breakSessionDuration = 300\n\nconst toggleClock = (reset) => {\n  togglePlayPauseIcon(reset);\n  if (reset) {\n    // Stop the timer\n    stopClock()\n  } else {\n    if (isClockStopped) {\n      setUpdatedTimers()\n      isClockStopped = false\n    }\n    if (isClockRunning === true) {\n      // Pause the timer\n      clearInterval(clockTimer)\n      isClockRunning = false\n    } else {\n      // Start the timer\n      clockTimer = setInterval(() => {\n        // decrease time left / increase time spent\n        stepDown()\n        displayCurrentTimeLeftInSession()\n      }, 1000)\n      isClockRunning = true\n    }\n    showStopIcon()\n  }\n}\n\n\nconst displayCurrentTimeLeftInSession = () => {\n  const secondsLeft = currentTimeLeftInSession\n  let result = ''\n  const seconds = secondsLeft % 60\n  const minutes = parseInt(secondsLeft / 60) % 60\n  let hours = parseInt(secondsLeft / 3600)\n  // add leading zeroes if it's less than 10\n  function addLeadingZeroes(time) {\n    return time < 10 ? `0${time}` : time\n  }\n  if (hours > 0) result += `${hours}:`\n  result += `${addLeadingZeroes(minutes)}:${addLeadingZeroes(seconds)}`\n  pomodoroTimer.innerText = result.toString()\n}\n\nconst stopClock = () => {\n  setUpdatedTimers()\n  clearInterval(clockTimer)\n  isClockStopped = true\n  isClockRunning = false\n  // reset the time left in the session to its original state\n  currentTimeLeftInSession = workSessionDuration\n  displayCurrentTimeLeftInSession()\n  type= 'Work'\n  timeSpentInCurrentSession = 0\n}\n\nconst stepDown = () => {\n  if (currentTimeLeftInSession > 0) {\n    // decrease time left / increase time spent\n    currentTimeLeftInSession--\n    timeSpentInCurrentSession++\n  } else if (currentTimeLeftInSession === 0) {\n    // Timer is over -> if work switch to break, viceversa\n    timeSpentInCurrentSession = 0\n    if (type === 'Work') {\n      currentTimeLeftInSession = breakSessionDuration\n      type = 'Break'\n      setUpdatedTimers();\n    } else {\n      currentTimeLeftInSession = workSessionDuration\n      type = 'Work'\n      setUpdatedTimers();\n    }\n  }\n  displayCurrentTimeLeftInSession()\n}\n\n// Update timer based on user input\nconst setUpdatedTimers = () => {\n  if (type === 'Work') {\n    currentTimeLeftInSession = updatedWorkSessionDuration\n      ? updatedWorkSessionDuration\n      : workSessionDuration\n    workSessionDuration = currentTimeLeftInSession\n  } else {\n    currentTimeLeftInSession = updatedBreakSessionDuration\n      ? updatedBreakSessionDuration\n      : breakSessionDuration\n    breakSessionDuration = currentTimeLeftInSession\n  }\n}\n\nconst minutes = parseInt(secondsLeft / 60) % 60\nlet hours = parseInt(secondsLeft / 3600)\n\nfunction addLeadingZeroes(time) {\n  return time < 10 ? `0${time}` : time\n}\n\nif (hours > 0) result += `${hours}:`\nresult += `${addLeadingZeroes(minutes)}:${addLeadingZeroes(seconds)}`\n\npomodoroTimer.innerText = result\n\n\n\n\n// POMODORO end\n\n\n// DICTIONARY START\n// https://github.com/patelrohan750/Build-A-Dictionary-app-using-JavaScript/tree/master\n\nlet input = document.querySelector('#input');\nlet searchBtn = document.querySelector('#dictionaryBtn');\nlet apiKey = 'b3459c2f-974e-4b4d-b275-980057d4041a';\nlet notFound = document.querySelector('.not__found');\nlet defBox = document.querySelector('.def');\nlet audioBox = document.querySelector('.audio');\nlet loading = document.querySelector('.loading');\n\nsearchBtn.addEventListener('click', function(e) {\n\te.preventDefault();\n\n\t// clear data\n\taudioBox.innerHTML = '';\n\tnotFound.innerText = '';\n\tdefBox.innerText = '';\n\n\t// Get input data\n\tlet word = input.value;\n\t// call API get data\n\tif (word === '') {\n\t\talert('Word is required');\n\t\treturn;\n\t}\n\n\tgetData(word);\n});\n\nasync function getData(word) {\n\tloading.style.display = 'block';\n\t// Ajax call\n\tconst response = await fetch(`https://www.dictionaryapi.com/api/v3/references/collegiate/json/${word}?key=${apiKey}`);\n\tconst data = await response.json();\n\tconsole.log(data);\n\t// if empty result\n\tif (!data.length) {\n\t\tloading.style.display = 'none';\n\t\tnotFound.innerText = ' No result found';\n\t\treturn;\n\t}\n\n\t// If result is suggestions\n\tif (typeof data[0] === 'string') {\n\t\tloading.style.display = 'none';\n\t\tlet heading = document.createElement('h3');\n\t\theading.innerText = 'Did you mean:';\n\t\tnotFound.appendChild(heading);\n\t\tdata.forEach((element) => {\n\t\t\tlet suggestion = document.createElement('span');\n\t\t\tsuggestion.classList.add('suggested');\n\t\t\tsuggestion.innerText = element;\n\t\t\tnotFound.appendChild(suggestion);\n\t\t});\n\t\treturn;\n\t}\n\n\t// Result found\n\tloading.style.display = 'none';\n\tlet definition = data[0].shortdef[0];\n\tdefBox.innerText = definition;\n\n\t// Sound\n\tconst soundName = data[0].hwi.prs[0].sound.audio;\n\tif (soundName) {\n\t\trenderSound(soundName);\n\t}\n\n\tconsole.log(data);\n}\n\nfunction renderSound(soundName) {\n\t// https://media.merriam-webster.com/soundc11\n\tlet subfolder = soundName.charAt(0);\n\tlet soundSrc = `https://media.merriam-webster.com/soundc11/${subfolder}/${soundName}.wav?key=${apiKey}`;\n\n\tlet aud = document.createElement('audio');\n\taud.src = soundSrc;\n\taud.controls = true;\n\taudioBox.appendChild(aud);\n}\n\n// DICTIONARY END"],"names":["$98c1ad201aa2a831$export$9099ad97b570f7c","links","pages","currentPage","[object Object]","console","log","this","pageId","forEach","link","classList","remove","getHash","add","page","style","display","document","getElementById","href","split","$cf4bdbdc6ff74c55$var$nav","querySelectorAll","getLinks","addEventListener","setPage","$cf4bdbdc6ff74c55$var$subNav","$cf4bdbdc6ff74c55$var$form","querySelector","$cf4bdbdc6ff74c55$var$taskInput","$cf4bdbdc6ff74c55$var$tasklist","$cf4bdbdc6ff74c55$var$dueDateInput","$cf4bdbdc6ff74c55$var$completionTimeInput","$cf4bdbdc6ff74c55$var$estimatedTimeInput","$cf4bdbdc6ff74c55$var$priorityInput","event","preventDefault","task","value","dueDate","completionTime","taskDescription","estimatedTime","priorityRating","completionStatus","dateCreated","Date","getFullYear","$cf4bdbdc6ff74c55$var$taskListArray","push","item","createElement","innerHTML","appendChild","delButton","delButtonText","createTextNode","reset","$cf4bdbdc6ff74c55$var$renderTask","$cf4bdbdc6ff74c55$var$addTask","options","selectedIndex","taskList","$cf4bdbdc6ff74c55$var$startTime","$cf4bdbdc6ff74c55$var$timerInterval","$cf4bdbdc6ff74c55$var$elapsedTime","$cf4bdbdc6ff74c55$var$print","txt","$cf4bdbdc6ff74c55$var$showButton","buttonKey","buttonToHide","$cf4bdbdc6ff74c55$var$pauseButton","$cf4bdbdc6ff74c55$var$playButton","$cf4bdbdc6ff74c55$var$resetButton","now","setInterval","time","diffInHrs","hh","Math","floor","diffInMin","mm","diffInSec","ss","diffInMs","ms","toString","padStart","$cf4bdbdc6ff74c55$var$timeToString","clearInterval","$cf4bdbdc6ff74c55$var$pomodoroTimer","$cf4bdbdc6ff74c55$var$pomStart","$cf4bdbdc6ff74c55$var$pomStop","$cf4bdbdc6ff74c55$var$updatedWorkSessionDuration","$cf4bdbdc6ff74c55$var$updatedBreakSessionDuration","$cf4bdbdc6ff74c55$var$type","$cf4bdbdc6ff74c55$var$timeSpentInCurrentSession","$cf4bdbdc6ff74c55$var$isClockStopped","$cf4bdbdc6ff74c55$var$workDurationInput","$cf4bdbdc6ff74c55$var$breakDurationInput","$cf4bdbdc6ff74c55$var$toggleClock","$cf4bdbdc6ff74c55$var$minuteToSeconds","mins","$cf4bdbdc6ff74c55$var$isClockRunning","$cf4bdbdc6ff74c55$var$workSessionDuration","$cf4bdbdc6ff74c55$var$currentTimeLeftInSession","$cf4bdbdc6ff74c55$var$breakSessionDuration","playIcon","pauseIcon","contains","toggle","$cf4bdbdc6ff74c55$var$togglePlayPauseIcon","$cf4bdbdc6ff74c55$var$stopClock","$cf4bdbdc6ff74c55$var$setUpdatedTimers","clockTimer","$cf4bdbdc6ff74c55$var$stepDown","$cf4bdbdc6ff74c55$var$displayCurrentTimeLeftInSession","secondsLeft","result","seconds","minutes","parseInt","hours","addLeadingZeroes","innerText","$cf4bdbdc6ff74c55$var$minutes","$cf4bdbdc6ff74c55$var$hours","$cf4bdbdc6ff74c55$var$addLeadingZeroes","$cf4bdbdc6ff74c55$var$input","$cf4bdbdc6ff74c55$var$searchBtn","$cf4bdbdc6ff74c55$var$apiKey","$cf4bdbdc6ff74c55$var$notFound","$cf4bdbdc6ff74c55$var$defBox","$cf4bdbdc6ff74c55$var$audioBox","$cf4bdbdc6ff74c55$var$loading","e","word","response","fetch","data","json","length","heading","element","suggestion","definition","shortdef","soundName","hwi","prs","sound","audio","soundSrc","charAt","aud","src","controls","$cf4bdbdc6ff74c55$var$renderSound","$cf4bdbdc6ff74c55$var$getData","alert"],"version":3,"file":"index.d97be36d.js.map"}